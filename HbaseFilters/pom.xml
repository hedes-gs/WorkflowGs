<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.gs.photos</groupId>
		<artifactId>WorkFlow</artifactId>
		<version>1.0.0-SNAPSHOT</version>
		<relativePath>../WorkFlow/pom.xml</relativePath>
	</parent>
	<artifactId>HbaseFilters</artifactId>
	<properties>

		<!-- protobuf paths -->
		<protobuf.input.directory>${project.basedir}/src/main/proto</protobuf.input.directory>
		<protobuf.output.directory>${project.build.directory}/generated-sources</protobuf.output.directory>

		<!-- library versions -->
		<build-helper-maven-plugin.version>1.9.1</build-helper-maven-plugin.version>
		<maven-antrun-plugin.version>1.8</maven-antrun-plugin.version>
		<maven-dependency-plugin.version>2.10</maven-dependency-plugin.version>
		<maven-shade-plugin.version>2.4.2</maven-shade-plugin.version>
		<os-maven-plugin.version>1.4.1.Final</os-maven-plugin.version>

	</properties>
	<dependencies>
		<dependency>
			<groupId>org.apache.hbase</groupId>
			<artifactId>hbase-client</artifactId>
			<scope>provided</scope>
		</dependency>
	</dependencies>
	<build>
		<extensions>
			<!-- provides os.detected.classifier (i.e. linux-x86_64, osx-x86_64) property -->
			<extension>
				<groupId>kr.motd.maven</groupId>
				<artifactId>os-maven-plugin</artifactId>
				<version>${os-maven-plugin.version}</version>
			</extension>
		</extensions>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-protoc</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>com.google.protobuf</groupId>
									<artifactId>protoc</artifactId>
									<version>${protobuf.version}</version>
									<classifier>${os.detected.classifier}</classifier>
									<type>exe</type>
									<overWrite>true</overWrite>
									<outputDirectory>${project.build.directory}</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>exec-protoc</id>
						<phase>generate-sources</phase>
						<configuration>
							<target>
								<property name="protoc.filename"
									value="protoc-${protobuf.version}-${os.detected.classifier}.exe" />
								<property name="protoc.filepath"
									value="${project.build.directory}/${protoc.filename}" />
								<chmod file="${protoc.filepath}" perm="ugo+rx" />
								<mkdir dir="${protobuf.output.directory}" />
								<path id="protobuf.input.filepaths.path">
									<fileset dir="${protobuf.input.directory}">
										<include name="**/*.proto" />
									</fileset>
								</path>
								<pathconvert pathsep=" "
									property="protobuf.input.filepaths"
									refid="protobuf.input.filepaths.path" />
								<exec executable="${protoc.filepath}" failonerror="true">
									<arg value="-I" />
									<arg value="${protobuf.input.directory}" />
									<arg value="--java_out" />
									<arg value="${protobuf.output.directory}" />
									<arg line="${protobuf.input.filepaths}" />
								</exec>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-classes</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${protobuf.output.directory}</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration combine.self="override">
					<verbose>true</verbose>
					<fork>true</fork>
					<executable>${JAVA_8_HOME}/bin/javac</executable>
					<source>1.8</source>
					<target>1.8</target>
					<compilerArgs>
						<compilerArg />
					</compilerArgs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<finalName>hbase-filters</finalName>
					<outputDirectory>../WorkFlow/ansible/tools/hbase</outputDirectory>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-dependency-plugin
										</artifactId>
										<versionRange>
											[2.10,)
										</versionRange>
										<goals>
											<goal>copy</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-antrun-plugin
										</artifactId>
										<versionRange>
											[1.8,)
										</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>