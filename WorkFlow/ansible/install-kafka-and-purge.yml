- hosts: all
  become: true
  tasks:
    - debug:
        msg: Download Kafka "{{ kafka_version }} {{ zookeeper_ids }}"
    - user: name="{{ user_to_create }}" group=nogroup
    - name: stop kafka service
      shell: systemctl stop kafka.service 
    - name: stop zookeeper service
      shell: systemctl stop zookeeper 
      loop: "{{ lookup('dict', zookeeper_ids) }}"
      when:  inventory_hostname == item.value.key
    - name: Create kafka {{ kafka_install_folder }}
      file:
        path: "{{ kafka_install_folder }}"
        state: directory
        owner: "{{user_to_create}}"
    - name: Create kafka {{ kafka_install_folder }}
      file:
        path: "{{ kafka_install_folder }}"
        state: directory
        owner: "{{user_to_create}}"
    - name: Create folder var/lib/kafka
      file:
        path: /var/lib/kafka
        state: directory
        owner: "{{ user_to_create }}"
    - name: Create folder var/lib/kafka
      file:
        path: /var/lib/kafka/data
        state: directory
        owner: "{{ user_to_create }}"
    - name: purge kafka
      shell: "rm -rf /var/lib/kafka/data ; mkdir /var/lib/kafka/data ; chmod 777 /var/lib/kafka/data ; chown -R kafka:nogroup /var/lib/kafka/data"
    - name: Purge zookeeper
      shell: "rm -rf /var/lib/zookeeper; mkdir /var/lib/zookeeper; chown -R zookeeper:zookeeper /var/lib/zookeeper ; chmod 777 /var/lib/zookeeper"
    - name: Set Zookeeper Id
      shell: "echo {{ item.value.value }} > /var/lib/zookeeper/myid; chown -R zookeeper:zookeeper /var/lib/zookeeper/myid"
      loop: "{{ lookup('dict', zookeeper_ids) }}"
      when:  inventory_hostname == item.value.key
    - name: Create folder  {{ kafka_install_folder }}/kafka_2.12-{{ kafka_version }}
      file:
        path: "{{ kafka_install_folder }}/kafka_2.12-{{ kafka_version }}"
        state: directory
        owner: "{{ user_to_create }}"
    - name: Download Kafka {{ kafka_version }}
      get_url: url=http://www-eu.apache.org/dist/kafka/{{ kafka_version }}/kafka_2.12-{{ kafka_version }}.tgz  dest={{ kafka_install_folder }}/kafka_2.12-{{ kafka_version }}.tgz  mode=0644 force=no
    - name: Unpack the tar
      shell: tar -xzvf {{ kafka_install_folder }}/kafka_2.12-{{ kafka_version }}.tgz --directory {{ kafka_install_folder }}
    - name: remove symlink /usr/local/kafka to this version
      shell: rm -f {{ kafka_install_folder }}/latest
    - name: Symlink /usr/local/kafka to this version
      shell: ln -s {{ kafka_install_folder }}/kafka_2.12-{{ kafka_version }} {{ kafka_install_folder }}/latest
    - name: Create folder  {{ kafka_install_folder }}/latest/logs
      file:
        path: "{{ kafka_install_folder }}/latest/logs"
        state: directory
        owner: "{{ user_to_create }}"
    - name: Purge logs
      shell: "rm -f {{ kafka_install_folder }}/latest/logs/*"
    - name: build config file from template
      vars:
          broker_id: "{{ ids[inventory_hostname].value }}"
      template:
        src: ./tools/kafka/server.properties
        dest: "{{ kafka_install_folder }}/latest/config/server.properties"
        owner: "{{ user_to_create }}"
        mode: 0666
    - name: build kafka.service from template
      template:
        src: ./tools/kafka/kafka.service
        dest: /etc/systemd/system/kafka.service
        owner: root
        mode: 0666
    - name: build kafka.conf from template
      template:
        src: ./tools/kafka/kafka.conf
        dest: /etc/rsyslog.d/kafka.conf
        owner: root
        mode: 0666
    - name: restart zookeeper
      shell: systemctl restart zookeeper
      loop: "{{ lookup('dict', zookeeper_ids) }}"
      when:  inventory_hostname == item.value.key
    - name: restart syslog
      shell: systemctl restart rsyslog
    - name: restart kafka service
      shell: systemctl restart kafka.service 
    - name: enable kafka.service
      shell: systemctl enable kafka.service
 
  vars:
    ansible_become_pass: granada01
    kafka_version: 2.3.0
    user_to_create: kafka
    kafka_install_folder: /opt/kafka
    PWD: "{{ lookup('env', 'PWD') }}"
    zookeeper_ids:
      item_1:
        key: "192.168.1.200"
        value: 1
      item_2:
        key: "192.168.1.201"
        value: 2
      item_3:
        key: "192.168.1.202"
        value: 3
    ids:
      192.168.1.200:
        value: 1
      192.168.1.201:
        value: 2
      192.168.1.202:
        value: 3
      192.168.1.203:
        value: 4
      192.168.1.205:
        value: 5
      192.168.1.206:
        value: 6