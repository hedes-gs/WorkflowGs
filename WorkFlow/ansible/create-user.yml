---
- hosts: all
  become: true
  tasks:
    - debug:
        msg: "demarrage {{ PWD }}"
    - name: current_working_directory
      shell: pwd
      register: current_working_directory
    - name: load
      include_vars:
        file: "{{ PWD }}/prod.properties"
    - user: name={{ user_to_create }} group=nogroup
    - name: Placing key
      authorized_key: user={{ user_to_create }} key="{{ lookup('file', 'authorized_keys') }}"
    - name: Create folder config
      file:
        path: ~{{ user_to_create }}/config
        state: directory
        owner: "{{user_to_create}}"
    - name: Create folder lib
      file:
        path: ~{{ user_to_create }}/lib
        state: directory
        owner: "{{ user_to_create }}"
    - name: Create folder bin
      file:
        path: ~{{ user_to_create }}/bin
        state: directory
        owner: "{{user_to_create}}"
    - name: Create folder logs
      file:
        path: ~{{ user_to_create }}/logs
        state: directory
        owner: "{{ user_to_create }}"
    - name: build config file from template
      vars:
          host_id: "{{ ids[inventory_hostname].value }}"
      template:
        src: ../src/main/resources/application.properties.template
        dest: ~{{ user_to_create }}/config/application.properties
        owner: "{{ user_to_create }}"
        mode: 0666
    - name: build bin file from template
      template:
        src: ../bin/run.sh.template
        dest: ~{{ user_to_create }}/bin/run.sh
        owner: "{{ user_to_create }}"
        mode: 0744
    - name: build bin file from template
      template:
        src: ../config/log4j.xml.template
        dest: ~{{ user_to_create }}/config/log4j.xml
        owner: "{{ user_to_create }}"
        mode: 0744
    - name: Get running processes
      shell: "ps axo user:20,pid,command | grep java | grep {{ user_to_create }} | grep java | grep -v grep | awk '{print $2}'"
      register: running_processes
    - debug:
        msg: "found processes : {{ running_processes.stdout_lines }}"
    - name: Kill running processes
      shell: "kill {{ item }}"
      with_items: "{{ running_processes.stdout_lines }}"
    - wait_for:
        path: "/proc/{{ item }}/status"
        state: absent
      with_items: "{{ running_processes.stdout_lines }}"
      ignore_errors: yes
      register: killed_processes
    - name: Force kill stuck processes
      shell: "kill -9 {{ item }}"
      with_items: "{{ killed_processes.results | select('failed') | map(attribute='item') | list }}"
    - name: del princip
      shell: kadmin.local -q 'delprinc -force {{ user_to_create }}@GS.COM'
      when:  inventory_hostname == '192.168.1.206'
    - name: add princip
      shell: kadmin.local -q 'addprinc -pw {{ user_to_create }} {{ user_to_create }}@GS.COM' 
      when:  inventory_hostname == '192.168.1.206'
    - name: rm keytab
      shell: rm -f /home/user/keytabs/{{ user_to_create }}.keytab
      when:  inventory_hostname == '192.168.1.206'
    - name: create keytabs 
      shell: kadmin.local -q 'ktadd -k /home/user/keytabs/{{user_to_create}}.keytab -e aes256-cts-hmac-sha1-96:normal,aes128-cts-hmac-sha1-96:normal,arcfour-hmac-md5:normal  {{user_to_create}}@GS.COM'
      when:  inventory_hostname == '192.168.1.206'
    - name: get keytab hbase@GS.COM
      fetch:
        src: /home/user/keytabs/{{user_to_create}}.keytab
        dest: ../../WorkFlow/ansible/tools/application/keytabs/
        flat: yes
      when:  inventory_hostname == '192.168.1.206'
  vars:
    ansible_become_pass: granada01
    PWD: "{{ lookup('env', 'PWD') }}"
    ids:
      192.168.1.200:
        value: 1
      192.168.1.201:
        value: 2
      192.168.1.202:
        value: 3
      192.168.1.203:
        value: 4
      192.168.1.205:
        value: 5
      192.168.1.206:
        value: 6